-- Użytkownicy (Users)
CREATE TABLE Users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50) UNIQUE NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password_hash VARCHAR2(255) NOT NULL,
    registration_date DATE DEFAULT SYSDATE
);

-- Rodzaje Ryb (FishTypes)
CREATE TABLE FishTypes (
    fish_type_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) UNIQUE NOT NULL,
    description VARCHAR2(500)
);

-- Miejsca Wędkarskie (FishingSpots)
CREATE TABLE FishingSpots (
    spot_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    latitude NUMBER(9,6),
    longitude NUMBER(9,6),
    description VARCHAR2(1000),
    created_by_user_id NUMBER NOT NULL,
    created_at DATE DEFAULT SYSDATE,
    FOREIGN KEY (created_by_user_id) REFERENCES Users(user_id)
);

-- Posty (Posts)
CREATE TABLE Posts (
    post_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    spot_id NUMBER, -- Opcjonalnie, post może dotyczyć konkretnego miejsca
    title VARCHAR2(255) NOT NULL,
    content CLOB NOT NULL,
    created_at DATE DEFAULT SYSDATE,
    updated_at DATE,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (spot_id) REFERENCES FishingSpots(spot_id)
);

-- Komentarze (Comments)
CREATE TABLE Comments (
    comment_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    post_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    content VARCHAR2(2000) NOT NULL,
    created_at DATE DEFAULT SYSDATE,
    updated_at DATE,
    FOREIGN KEY (post_id) REFERENCES Posts(post_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Złapane Ryby (Catches)
CREATE TABLE Catches (
    catch_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    spot_id NUMBER NOT NULL,
    fish_type_id NUMBER NOT NULL,
    weight_kg NUMBER(5,2),
    length_cm NUMBER(5,2),
    date_caught DATE DEFAULT SYSDATE,
    photo_url VARCHAR2(255),
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (spot_id) REFERENCES FishingSpots(spot_id),
    FOREIGN KEY (fish_type_id) REFERENCES FishTypes(fish_type_id)
);

-- Lajki (Likes)
CREATE TABLE Likes (
    like_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    post_id NUMBER, -- Może być lajk do posta
    comment_id NUMBER, -- Lub do komentarza
    created_at DATE DEFAULT SYSDATE,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (post_id) REFERENCES Posts(post_id) ON DELETE CASCADE,
    FOREIGN KEY (comment_id) REFERENCES Comments(comment_id) ON DELETE CASCADE,
    CONSTRAINT chk_like_target CHECK ( (post_id IS NOT NULL AND comment_id IS NULL) OR (post_id IS NULL AND comment_id IS NOT NULL) )
);

-- Statusy Wody (WaterConditions) - "limitowany zasób"
CREATE TABLE WaterConditions (
    condition_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    spot_id NUMBER NOT NULL,
    temperature_c NUMBER(4,2),
    water_level_cm NUMBER(6,2),
    clarity_m NUMBER(4,2),
    flow_rate_cms NUMBER(6,2),
    recorded_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (spot_id) REFERENCES FishingSpots(spot_id)
);

-- Modyfikacje
ALTER TABLE Users MODIFY (password_hash VARCHAR2(255));

ALTER TABLE Users ADD (role VARCHAR2(20) DEFAULT 'USER' NOT NULL);
ALTER TABLE Users ADD CONSTRAINT chk_user_role CHECK (role IN ('USER', 'MODERATOR', 'ADMIN'));

RENAME Comments TO Forum_Comments;
RENAME Likes TO Post_Likes;